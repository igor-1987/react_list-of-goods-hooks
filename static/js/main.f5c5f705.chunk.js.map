{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","goods","visibleGoods","sort","previous","current","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","classNames","reversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAmBH,EAASM,MAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EA9BD,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQN,GACN,KAAKP,EAASc,SACZ,OAAOF,EAASG,cAAcF,GAEhC,KAAKb,EAASgB,OACZ,OAAOJ,EAASK,OAASJ,EAAQI,OAEnC,QACE,OAAO,MAITb,GACFM,EAAaQ,UAGRR,EAOOS,CACZlB,EACA,CAAEM,WAAUH,eAYd,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAde,kBAAMd,EAAYR,EAASc,WAe1CM,UAAWG,IACT,iBACA,CAAE,WAAYhB,IAAaP,EAASc,WALxC,iCAWA,wBACEO,KAAK,SACLC,QAxBa,kBAAMd,EAAYR,EAASgB,SAyBxCI,UAAWG,IACT,oBACA,CAAE,WAAYhB,IAAaP,EAASgB,SALxC,4BAWA,wBACEK,KAAK,SACLC,QAlCc,kBAAMjB,GAAc,SAAAmB,GAAQ,OAAKA,MAmC/CJ,UAAWG,IACT,oBACA,CAAE,YAAanB,IALnB,sBAYGG,IAAaP,EAASM,MAAQF,IAE3B,wBACEiB,KAAK,SACLD,UAAU,4BACVE,QA/CO,WACnBd,EAAYR,EAASM,MACrBD,GAAc,IA0CJ,sBAUR,6BACE,6BACGI,EAAMgB,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIIA,GAHGA,cC3HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f5c5f705.chunk.js","sourcesContent":["import { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((previous, current) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return previous.localeCompare(current);\n\n      case SortType.LENGTH:\n        return previous.length - current.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState<SortType>(SortType.NONE);\n\n  const goods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  const sortByAlphabet = () => setSortType(SortType.ALPHABET);\n  const sortByLength = () => setSortType(SortType.LENGTH);\n  const toggleReverse = () => setIsReversed(reversed => !reversed);\n\n  const resetReverse = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={sortByAlphabet}\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={sortByLength}\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={toggleReverse}\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortType !== SortType.NONE || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={resetReverse}\n              >\n                Reset\n              </button>\n            )\n        }\n      </div>\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              { good }\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}